(defmacro backwards
  [form]
  (reverse form))

(backwards (" backwards" " am" "I" str))


;; These exercises focus on reading and evaluation. Chapter 8 has exercises for writing macros.

;; Use the list function, quoting, and read-string to create a list that, when evaluated, prints your first name and your favorite sci-fi movie.)
(def cmd
  (eval (list read-string "(print \"roy\" \"dune\")")))
(eval cmd)

;; Create an infix function that takes a list like (1 + 3 * 4 - 5) and transforms it into the lists that Clojure needs in order to correctly evaluate the expression using operator precedence rules.

(defn infix
  [exp]
  )

